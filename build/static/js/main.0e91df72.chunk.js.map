{"version":3,"sources":["config/images.js","pages/home/home.js","router.js","errorBoundary.js","registerServiceWorker.js","utils/colors.js","utils/defaults.js","utils/theme.js","components/styled/global/base.js","components/styled/global/reset.js","components/styled/global/index.js","index.js"],"names":["path","config_images","appLogo","concat","Home","react_default","a","createElement","HomeWrapper","HomeHeader","src","images","className","alt","HomeIntro","href","styled","div","_templateObject","header","_templateObject2","props","theme","primary","_templateObject3","gray","Router","BrowserRouter","Switch","Route","exact","component","Component","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","setState","Wrapper","children","errorBoundary_templateObject","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","Colors","dark","white","mustard","sec","skyblue","green","yellow","orange","red","neutral","darkWhite","black","Defaults","fontFamily","sansSerif","base","fontSize","xs","sm","md","lg","hg","fontWeight","light","medium","bold","lineHeight","heading","transition","opacity","css","base_templateObject","reset","reset_templateObject","GlobalStyle","createGlobalStyle","global_templateObject","ReactDOM","render","errorBoundary","styled_components_browser_esm","react","global","router","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0e91df72.chunk.js","sourcesContent":["const img = path => `/img/${path}`;\n\nexport default {\n  appLogo: img(\"logo.svg\")\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { images } from \"config\";\n\nconst Home = () => (\n  <HomeWrapper>\n    <HomeHeader>\n      <img src={images.appLogo} className=\"Home-logo\" alt=\"logo\" />\n      <h1 className=\"Home-title\">Design System in React</h1>\n    </HomeHeader>\n    <HomeIntro>\n      Visit this <a href=\"https://medium.com/p/b2210f24e4fe/\">link</a> to learn\n      more.\n    </HomeIntro>\n  </HomeWrapper>\n);\n\nexport default Home;\n\nconst HomeWrapper = styled.div`\n  text-align: center;\n  .Home-logo {\n    animation: Home-logo-spin infinite 20s linear;\n    height: 80px;\n  }\n  .Home-title {\n    font-size: 1.5em;\n  }\n\n  @keyframes Home-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst HomeHeader = styled.header`\n  background-color: ${props => props.theme.primary.primary};\n  height: 150px;\n  padding: 20px;\n  color: white;\n`;\n\nconst HomeIntro = styled.div`\n  color: ${props => props.theme.primary.gray};\n  font-size: large;\n  padding: 36px 0;\n\n  a {\n    color: ${props => props.theme.primary.primary};\n    text-decoration: none;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"pages\";\n\nclass Router extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nclass ErrorBoundary extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tcomponentDidCatch(error) {\n\t\tthis.setState({ hasError: true });\n\t}\n\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\treturn(\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<h4>Something went wrong</h4>\n\n\t\t\t\t\t<p>Please try again in few moments.</p>\n\t\t\t\t</Wrapper>\n\t\t\t);\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n\nconst Wrapper = styled.div`\n\n\tmax-width: 600px;\n\tmargin: 80px auto;\n\n\th4{\n\t\tfont-size: 32px;\n\t}\n\n`;\n\n\n\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//Primary\nconst gray = \"#333333\";\nconst white = \"#FFFFFF\";\nconst dark = \"#3A424C\";\nconst primary = \"#20BCFB\";\nconst mustard = \"#F4D849\";\n//Secondary\nconst skyblue = \"#09B7D6\";\nconst green = \"#98e064\";\nconst yellow = \"#f98c42\";\nconst orange = \"#f98c42\";\nconst red = \"#f44336\";\n//Neutral\nconst black = \"#000\";\nconst darkWhite = \"#eceaf1\";\n\nconst Colors = {\n  primary: {\n    dark,\n    primary,\n    white,\n    mustard,\n    gray\n  },\n  sec: {\n    skyblue,\n    green,\n    yellow,\n    orange,\n    red\n  },\n  neutral: {\n    darkWhite,\n    black\n  }\n};\n\nexport default Colors;\n","const fontSansSerif = \"Noto Sans,sans-serif\";\nconst fontBase = fontSansSerif;\n\nconst fontSizeXs = 12;\nconst fontSizeSm = 14;\nconst fontSizeMd = 21;\nconst fontSizeLg = 28;\nconst fontSizeHg = 48;\n\nconst fontWeightBase = 400;\nconst fontWeightLight = 300;\nconst fontWeightMedium = 500;\nconst fontWeightBold = 600;\n\nconst lineHeightBase = 1.33;\nconst lineHeightHeading = 1.2;\n\nconst transitionBase = \"all .2s ease-in-out\";\nconst transitionFade = \"opacity .15s linear\";\n\nconst Defaults = {\n  fontFamily: {\n    sansSerif: fontSansSerif,\n    base: fontBase\n  },\n  fontSize: {\n    xs: fontSizeXs,\n    sm: fontSizeSm,\n    md: fontSizeMd,\n    lg: fontSizeLg,\n    hg: fontSizeHg\n  },\n  fontWeight: {\n    light: fontWeightLight,\n    base: fontWeightBase,\n    medium: fontWeightMedium,\n    bold: fontWeightBold\n  },\n  lineHeight: {\n    base: lineHeightBase,\n    heading: lineHeightHeading\n  },\n  transition: {\n    base: transitionBase,\n    opacity: transitionFade\n  }\n};\n\nexport default Defaults;\n","import Colors from \"./colors\";\nimport Defaults from \"./defaults\";\nconst { primary, sec, neutral } = Colors;\nconst { fontFamily, fontSize, fontWeight, lineHeight, transition } = Defaults;\n\nconst theme = {\n  primary,\n  sec,\n  neutral,\n  fontFamily,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  transition\n};\n\nexport default theme;\n","import { css } from \"styled-components\";\n\nconst base = css`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nexport default base;\n","import { css } from \"styled-components\";\n\nconst reset = css`\n  /* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  b,\n  u,\n  i,\n  center,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: \"\";\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport default reset;\n","import { createGlobalStyle } from \"styled-components\";\nimport base from \"./base\";\nimport reset from \"./reset\";\n\nconst GlobalStyle = createGlobalStyle`\n ${reset}\n ${base}\n`;\n\nexport default GlobalStyle;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./router\";\nimport ErrorBoundary from \"./errorBoundary\";\nimport { ThemeProvider } from \"styled-components\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport theme from \"utils/theme\";\nimport GlobalStyle from \"components/styled/global/index\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <GlobalStyle />\n        <Router />\n      </Fragment>\n    </ThemeProvider>\n  </ErrorBoundary>,\n\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}